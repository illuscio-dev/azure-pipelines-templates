parameters:
  # The branch to push passing 'dev' builds into.
  - name: releaseBranchName
    type: string

steps:

# Create a temp branch to commit our changes to.
- script: |
    git checkout -b tempBuildBranch
    git add -A .
    git commit -am "release build for $(RELEASE_VERSION)"
  displayName: 'Commit changes to temp branch & add build files.'
  condition: succeeded()

# Merge into master, resolving conflicts by favoring our temp branch.
- script: |
    git push -f origin tempBuildBranch:${RELEASE_BRANCH}
  displayName: 'Push Build to Release Branch'
  condition: succeeded()
  env:
    RELEASE_BRANCH: ${{ parameters.releaseBranchName }}

# Tag with the release version as well as 'latest' and push the tag.
- script: |
    git checkout $(RELEASE_BRANCH)
    git pull
    git tag -d latest
    git tag -a v$(RELEASE_VERSION) -m "azure pipelines build $(Build.BuildNumber)"
    git tag -a latest -m "azure pipelines build $(Build.BuildNumber)"
    git push origin :refs/tags/latest
    git push --tags
  displayName: 'Publish tagged version.'
  condition: succeeded()
  env:
    RELEASE_BRANCH: ${{ parameters.releaseBranchName }}
