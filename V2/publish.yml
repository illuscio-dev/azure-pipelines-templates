parameters:
  # What the primary language of this build is. Choices are GO | PYTHON | DOCKER.
  - name: language
    type: string

  # What the repo type for this build. Choices are LIBRARY | SERVICE. Service will
  # result in docker container build and push.
  - name: buildType
    type: string

  # Artifact feed to pull custom packages from (pass blank if not using).
  - name: pypiAzureArtifactFeed
    type: string

  # The branch to push passing 'dev' builds into.
  - name: releaseBranchName
    type: string

  # Publish to the public pypi.org
  - name: publishToPypiOrg
    type: boolean

steps:

  # Freeze the list of packages this build was made with for reference.
  - script: pip freeze > pip-freeze.txt
    displayName: 'Freeze python package list'

  # Merge build to the release branch and tag as release version (this is how go
  # modules are published). We are going to do it for every type of release, so we
  # always have a history of tags for each release.
  - template: git_update_release_branch.yml
    parameters:
      releaseBranchName: ${{ parameters.releaseBranchName }}

  - ${{ if eq( parameters.buildType, 'LIBRARY') }}:

    - template: publish_library.yml
      parameters:
        language: ${{ parameters.language }}
        pypiAzureArtifactFeed: ${{ parameters.pypiAzureArtifactFeed }}
        publishToPypiOrg: ${{ parameters.publishToPypiOrg }}

  - ${{ if eq( parameters.buildType, 'SERVICE')}}:

    - template: publish_service.yml
      parameters:
        language: ${{ parameters.language }}
