parameters:
  - name: goVersionLink
    type: string

# Setup go
steps:

# Downloads and extracts go runtime.
- script: |
    curl "${{ parameters.goVersionLink }}" --output "$(Agent.BuildDirectory)/goDownload"
  displayName: 'Download go version.'

- script: |
    tar -C '$(Agent.BuildDirectory)' -xzf "$(Agent.BuildDirectory)/goDownload"
    shopt -s extglob
    shopt -s dotglob
    mkdir gobin
    echo '##vso[task.prependpath]$(GOBIN)'
    echo '##vso[task.prependpath]$(GOROOT)/bin'
  displayName: 'Install go version (linux).'
  condition: and(succeeded(), eq(variables['Agent.OS'], 'Linux'))

- script: go version
  displayName: 'Print go version'

- script: go env
  displayName: 'Print go env'

- script: |
    go get -u github.com/illuscio-dev/docmodule-go
    go get -u golang.org/x/tools/cmd/godoc
    go get -u github.com/mgechev/revive
    go get -u github.com/jstemmer/go-junit-report
  displayName: 'Go get CLI tools'
  workingDirectory: $(Agent.BuildDirectory)

- script: go get -v -t -d ./...
  displayName: 'Go get dependencies'